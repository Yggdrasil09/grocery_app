{"version":3,"sources":["Components/ListTab/ListTab.js","Components/App.js","serviceWorker.js","index.js"],"names":["TabPane","Tabs","Option","Select","layout","labelCol","span","wrapperCol","tailLayout","offset","columns","title","dataIndex","key","render","text","ListTab","formRef","React","createRef","showModal","state","table","length","message","error","setState","visible","handleOk","e","selected_canteen","selected_name","selected_number","data","Name","Zone","Mobile","Order","jsonlist","console","log","fetch","method","body","JSON","stringify","headers","Accept","credentials","then","res","window","location","reload","catch","err","handleCancel","onItemChange","value","item","i","j","price","quantity","itemId","onAmountChange","selected_quantity","onFinish","values","kart","concat","totalprice","code","onCanteenChange","onNameChange","target","onNumberChange","mode","canteen_data","json","this","xs","sm","md","lg","xl","defaultActiveKey","tabPosition","style","height","size","Object","keys","map","tab","ref","name","Item","label","rules","required","placeholder","onChange","allowClear","className","type","htmlType","onClick","onOk","onCancel","dataSource","Component","App","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"js/main.d1a4cbfb.chunk.js","sourcesContent":["import React,{Component} from 'react';\nimport { Row, Col, Tabs, Form, Button, Select, Alert, Table, Modal, Input, message } from 'antd';\n\nimport './ListTab.css';\n\nconst { TabPane } = Tabs;\n\nconst { Option } = Select;\n\nconst layout = {\n  labelCol: {\n    span: 4,\n  },\n  wrapperCol: {\n    span: 12,\n  },\n};\n\nconst tailLayout = {\n  wrapperCol: {\n    offset: 4,\n    span: 12,\n  },\n};\n\nconst columns = [\n    {\n      title: 'Item',\n      dataIndex: 'item',\n      key: 'item',\n      render: text => <b>{text}</b>,\n    },\n    {\n      title: 'Quantity',\n      dataIndex: 'quantity',\n      key: 'quantity',\n    },\n    {\n      title: 'Price',\n      dataIndex: 'price',\n      key: 'price',\n    },\n    {\n        title: 'Total Price',\n        dataIndex: 'totalprice',\n        key: 'totalprice',\n    },\n];\n\nclass ListTab extends Component{\n    \n    constructor(){\n        super();\n        this.state = {\n            mode:'top',\n            data:[],\n            kart:[],\n            item:\"\",\n            price:0,\n            quantity:0,\n            selected_quantity:0,\n            table:[],\n            jsonlist:[],\n            visible:false,\n            canteen_data:[],\n            selected_canteen:\"\",\n            selected_name:\"\",\n            selected_number:\"\",\n            itemId:\"\",\n        };\n    };\n\n    formRef = React.createRef();\n\n    showModal = () => {\n        if(this.state.table.length === 0)\n        {\n            message.error(\"Please enter items into the cart!\",3)\n        }\n        else\n        {\n            this.setState({\n                visible: true,\n            });\n        }\n    };\n\n    handleOk = e => {\n        if(this.state.selected_canteen===\"\"||this.state.selected_name.length===0||this.state.selected_number.length===0)\n        {\n            message.error(\"Please enter all the details!\",3)\n        }\n        else\n        {\n            if(this.state.selected_number.length!==10)\n            {\n                message.error(\"Please enter a 10-digit phone number!\")\n            }\n            else\n            {\n                let data = {\n                    Name:this.state.selected_name,\n                    Zone:this.state.selected_canteen,\n                    Mobile:this.state.selected_number,\n                    Order:this.state.jsonlist,\n                }\n                console.log(data);\n                this.setState({\n                  visible: false,\n                },()=>{\n                    fetch(\"http://localhost:5000/submit-order\",{\n                        method:\"POST\",\n                        body: JSON.stringify(data),\n                        headers: {\n                            Accept: \"application/json\",\n                            \"Content-Type\": \"application/json\"\n                        },\n                        credentials: \"same-origin\"\n                    })\n                    .then(res=>{\n                        window.location.reload();\n                    })\n                    .catch(err=>{\n                        console.log(err);\n                    })\n                });\n            }\n        }\n    };\n\n    handleCancel = e => {\n        this.setState({\n          visible: false,\n        });\n    };\n\n    onItemChange = value => {\n        this.setState({\n            item:value,\n        },()=>{\n            console.log(this.state.item)\n            for(let i in this.state.data)\n            {\n                for(let j in this.state.data[i])\n                {\n                    if(this.state.data[i][j][\"Item Name\"] === this.state.item)\n                    {\n                        this.setState({\n                            price:this.state.data[i][j][\"Price\"],\n                            quantity:this.state.data[i][j][\"Tab\"],\n                            itemId:this.state.data[i][j][\"Item Code\"],\n                        })\n                    }\n                }\n            }\n        })\n    };\n\n    onAmountChange = value => {\n        this.setState({\n            selected_quantity:value\n        })\n    };\n\n    onFinish = values => {\n        this.setState({\n            kart:this.state.kart.concat([values])\n        },()=>{\n            console.log(this.state.kart)\n            this.setState({\n                table:this.state.table.concat([{\n                    key:this.state.table.length+1,\n                    item:this.state.item,\n                    quantity:this.state.selected_quantity,\n                    price:this.state.price,\n                    totalprice:this.state.price*this.state.selected_quantity,\n                }]),\n                jsonlist:this.state.jsonlist.concat([{\n                    item:this.state.item,\n                    quantity:this.state.quantity,\n                    price:this.state.price,\n                    code:this.state.itemId,\n                }])\n            })\n        })\n    };\n\n    onCanteenChange = value => {\n        console.log(value)\n        this.setState({\n            selected_canteen:value\n        })\n    }\n\n    onNameChange = value => {\n        this.setState({\n            selected_name:value.target.value\n        })\n    }\n\n    onNumberChange = value => {\n        this.setState({\n            selected_number:value.target.value\n        })\n    }\n\n    componentWillMount(){\n        fetch(\"http://localhost:5000/test\",{\n            method:\"GET\"\n        })\n        .then(res=>{\n            return res.json();\n        })\n        .then(data=>{\n            console.log(data);\n            this.setState({\n                data:data\n            })\n        })\n        .catch(err=>{\n            console.log(err);\n        })\n        fetch(\"http://localhost:5000/trial\",{\n            method:\"GET\"\n        })\n        .then(res=>{\n            return res.json();\n        })\n        .then(data=>{\n            console.log(data);\n            this.setState({\n                canteen_data:data\n            })\n        })\n        .catch(err=>{\n            console.log(err)\n        })\n    }\n\n    render(){\n        const { mode } = this.state.mode;\n        return(\n            <div>\n                <Row >\n                    <Col xs={2} sm={2} md={2} lg={2} xl={1}/>\n                    <Col xs={20} sm={20} md={20} lg={20} xl={22}>\n                        <Tabs defaultActiveKey=\"1\" tabPosition={mode} style={{ height: \"70vh\" }} size='large'>\n                            {Object.keys(this.state.data).map(i => (\n                                <TabPane tab={`${i}`} key={i}>\n                                    <Form {...layout} ref={this.formRef} name=\"control-ref\" onFinish={this.onFinish}>\n                                        <Form.Item name=\"Item\" label=\"Select from list and enter the quantity\" rules={[{required: true,},]}>\n                                            <Select placeholder=\"Select a item\" onChange={this.onItemChange} allowClear>\n                                                {this.state.data[i].map(j => (\n                                                    <Option value={j[\"Item Name\"]} key={j[\"Item Name\"]}>{j[\"Item Name\"]}</Option>\n                                                ))}\n                                            </Select>\n                                        </Form.Item>\n                                        <Alert className=\"alert-mesg\" message={\"Price per unit : \"+this.state.price+\"/-\"} type=\"info\" />\n                                        <Form.Item name=\"Quantity\" label=\"Select the quantity\" rules={[{required: true,},]}>\n                                            <Select placeholder=\"Select the quantity of item\" onChange={this.onAmountChange} allowClear>\n                                                {Object.keys(this.state.quantity).map(j => (\n                                                    <Option value={this.state.quantity[j]} key={this.state.quantity[j]}>{this.state.quantity[j]}</Option>\n                                                ))}\n                                            </Select>\n                                        </Form.Item>\n                                        <Form.Item {...tailLayout}>\n                                            <Button type=\"primary\" htmlType=\"submit\" >\n                                                Submit\n                                            </Button>\n                                            <Button className=\"checkout_but\" htmlType=\"button\" onClick={this.showModal}>\n                                                Check Out\n                                            </Button>\n                                            <Modal title=\"Confirm your Details to place Order\" visible={this.state.visible} onOk={this.handleOk} onCancel={this.handleCancel}>\n                                                <Form ref={this.formRef} name=\"control-ref\" >\n                                                    <Form.Item name=\"Canteen\" label=\"Please select your desired drop point and time\" rules={[{required: true,},]}>\n                                                        <Select placeholder=\"Select a time\" onChange={this.onCanteenChange} allowClear>\n                                                            {Object.keys(this.state.canteen_data).map(i => (\n                                                                Object.keys(this.state.canteen_data[i]).map(j => (\n                                                                    <Option value={i+\"!\"+this.state.canteen_data[i][j]} key={i+this.state.canteen_data[i][j]}>{i+\" : \"+this.state.canteen_data[i][j]}</Option>\n                                                                ))\n                                                            ))}\n                                                        </Select>\n                                                    </Form.Item>\n                                                    <Form.Item name=\"name\"  label=\"Please enter your name\" rules={[{required: true,},]}>\n                                                        <Input onChange={this.onNameChange} placeholder=\"Enter your name\"/>\n                                                    </Form.Item>\n                                                    <Form.Item name=\"number\"  label=\"Please enter your mobile number\" rules={[{required: true,},]}>\n                                                        <Input onChange={this.onNumberChange} placeholder=\"Enter your mobile number\"/>\n                                                    </Form.Item>\n                                                </Form>\n                                            </Modal>\n                                        </Form.Item>\n                                    </Form>\n                                </TabPane>\n                            ))}\n                        </Tabs>\n                    </Col>\n                    <Col xs={2} sm={2} md={2} lg={2} xl={1}/>\n                </Row>\n                <Row>\n                    <Col xs={2} sm={2} md={4} lg={4} xl={4}/>\n                    <Col xs={20} sm={20} md={16} lg={16} xl={16}>\n                        <Table columns={columns} dataSource={this.state.table}/>\n                    </Col>\n                    <Col xs={2} sm={2} md={4} lg={4} xl={4}/>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default ListTab;","import React from 'react';\nimport 'antd/dist/antd.css';\n\nimport ListTab from './ListTab/ListTab.js'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ListTab/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}